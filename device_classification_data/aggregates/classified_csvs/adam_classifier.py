from cProfile import label
from fileinput import filename
import pandas as pd
import os

column_subset = [
    "id",
    "expiration_id",
    "src_ip",
    "src_mac",
    "src_oui",
    "src_port",
    "dst_ip",
    "dst_mac",
    "dst_oui",
    "dst_port",
    "protocol",
    "ip_version",
    "vlan_id",
    "bidirectional_first_seen_ms",
    "bidirectional_last_seen_ms",
    "bidirectional_duration_ms",
    "bidirectional_packets",
    "bidirectional_bytes",
    "src2dst_first_seen_ms",
    "src2dst_last_seen_ms",
    "src2dst_duration_ms",
    "src2dst_packets",
    "src2dst_bytes",
    "dst2src_first_seen_ms",
    "dst2src_last_seen_ms",
    "dst2src_duration_ms",
    "dst2src_packets",
    "dst2src_bytes",
    "bidirectional_min_ps",
    "bidirectional_mean_ps",
    "bidirectional_stddev_ps",
    "bidirectional_max_ps",
    "src2dst_min_ps",
    "src2dst_mean_ps",
    "src2dst_stddev_ps",
    "src2dst_max_ps",
    "dst2src_min_ps",
    "dst2src_mean_ps",
    "dst2src_stddev_ps",
    "dst2src_max_ps",
    "bidirectional_min_piat_ms",
    "bidirectional_mean_piat_ms",
    "bidirectional_stddev_piat_ms",
    "bidirectional_max_piat_ms",
    "src2dst_min_piat_ms",
    "src2dst_mean_piat_ms",
    "src2dst_stddev_piat_ms",
    "src2dst_max_piat_ms",
    "dst2src_min_piat_ms",
    "dst2src_mean_piat_ms",
    "dst2src_stddev_piat_ms",
    "dst2src_max_piat_ms",
    "bidirectional_syn_packets",
    "bidirectional_cwr_packets",
    "bidirectional_ece_packets",
    "bidirectional_urg_packets",
    "bidirectional_ack_packets",
    "bidirectional_psh_packets",
    "bidirectional_rst_packets",
    "bidirectional_fin_packets",
    "src2dst_syn_packets",
    "src2dst_cwr_packets",
    "src2dst_ece_packets",
    "src2dst_urg_packets",
    "src2dst_ack_packets",
    "src2dst_psh_packets",
    "src2dst_rst_packets",
    "src2dst_fin_packets",
    "dst2src_syn_packets",
    "dst2src_cwr_packets",
    "dst2src_ece_packets",
    "dst2src_urg_packets",
    "dst2src_ack_packets",
    "dst2src_psh_packets",
    "dst2src_rst_packets",
    "dst2src_fin_packets",
    "application_name",
    "application_category_name",
    "application_is_guessed",
    "application_confidence",
    "requested_server_name",
    "client_fingerprint",
    "server_fingerprint",
    "user_agent",
    "content_type",
    "label"
]

fileName = input("Enter path to file: ")

df = pd.read_csv(
    fileName,
    low_memory=False,
    usecols=column_subset
)

dict = {"dropcam" : "ip_camera",
	    "insteon_camera" : "ip_camera",
	    "netatmo_welcome" : "ip_camera",
	    "samsung_smart_cam" : "ip_camera",
	    "tp_link_smart_cam" : "ip_camera",
	    "wthings_smart_baby_monitor" : "ip_camera",
	    "macbook" : "laptop",
	    "wemo_motion_sensor" : "motion_sensor",
	    "hp_printer" : "printer",
	    "nest_smoke_alarm" : "smart_alarm",
	    "blipcare_blood_pressure" : "smart_bp_monitor",
	    "LiFX_smart_bulb" : "smart_bulb",
	    "pixstar_photo_frame" : "smart_frame",
	    "smart_things_hub" : "smart_hub",
	    "tp_link_smart_plug" : "smart_plug",
	    "withings_smart_scale" : "smart_scale",
	    "echo" : "smart_speaker",
	    "iHome" : "smart_speaker",
    	"triby_speaker" : "smart_speaker",
	    "withings_aura_sleep_sensor" : "smart_speaker",
	    "wemo_switch" : "smart_switch",
	    "android_phone" : "smartphone",
	    "iphone" : "smartphone",
	    "samsung_galaxy_tab" : "tablet",
	    "netatmo_weather_station" : "weather_station",
        "aria_smart_scale" : "smart_scale",
        "dlinkcam" : "ip_camera",
        "dlinkdaycam" : "ip_camera",
        "huebridge" : "smart_bridge",
        "plughs100" : "smart_plug",
        "plughs110" : "smart_plug",
        "wemoswitch" : "smart_switch",
        "wemoswitch2" : "smart_switch",
        }

df = df.replace({"label":dict})

fileName = fileName[:-4]

df.to_csv((fileName + "_classified.csv"), index=False)